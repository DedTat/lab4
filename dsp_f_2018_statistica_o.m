 %Программа определения частоты короткого сигнала 

%Для повышения точности определения количества периодов и частоты
%короткого сигнала используется комбинация
%БПФ, кросскорреляции, сплайн-аппроксимации,передискретизации
% и итерационное уточнение количества периодов
%Предусмотрена возможность использования в качестве показателя 
%сравнения исходного и эталонных сигналов коэффициента ковариации,
%коэффициента корреляции, суммы модулей разности (нормы Минковского),
%суммы модулей суммы (нормы Поддорогина)
%Время работы программы при 1024 испытаниях - 1 мин. 20 сек.
tic

kt=1024; % количество отсчетов
shum=0.3 ;%шум
kp=5.12;%количество периодов сигнала

clc;%очистка Command Window
i=1:kt;
for i4=1:2048 %количество испытаний
%1. ГЕНЕРАЦИЯ МОДЕЛЬНОГО СИГНАЛА
 %обнуление массива сигнала
  y(i)=0;
 
%ГЕНЕРАЦИЯ НОРМАЛЬНОГО И БЕЛОГО ШУМА
  noise=randn(1024);
  %noise=wgn(kt,1,0);

  %генерация модельного сигнала
  w(i)=exp(-20*((i-kt/2)/kt).^2);
  y(i)=cos(2*pi*kp*i/kt).*w(i);
  y(i)=y(i)+shum*noise(i); 

%i=1:kt; %отображение модельного сигнала во временной области

%2. ФУНКЦИОНАЛЬНОЕ ПРЕОБРАЗОВАНИЕ (БПФ)
bpfy=fft(y,kt);%БПФ
bpf=bpfy.*conj(bpfy)/kt;%БПФ

%нахождение макс. знач. функции БПФ для массива Y
[C,kpbpf]=max(bpf);
% for i=1:kt %поиск количества периодов, соответствующих максимуму БПФ
%     if (bpf(i)==C)          
%         kpbpf=(i-1);         
%         break
%     end
% end
kp_bpf=kpbpf-1;
%3. СОЗДАНИЕ ЭТАЛОНОВ И КРОССКОРРЕЛЯЦИЯ
kp1=kpbpf-1;
    search_area=0.7/kp;%начальная область поиска  относит. kp_bpf  
for i3=1:3 %задание количества итераций    
shagkor=kp1*search_area/3;%шаг поиска
        k=0;
  for j=kp1-kp1*search_area:shagkor:kp1+kp1*search_area %цикл для создания 6 эталонов в окрестности приближенного 
            %значения количества периодов, определенных с помощью БПФ.           
            k=k+1;
            xkor(k)=j;
            kor(k)=0;
            for i=1:kt           
                x(i)=0;    
            end
%Вычисление массивов эталонных сигналов 
%для формированиия эталонных сигналов прямоугольной формы - убрать sign
        %for i=1:kt                                                
        x(i)=cos(2*pi*j*i/kt).*w(i);
        %end    
%вычисление средних значений модельного и эталонных сигналов
            x_sr=mean(x);
            y_sr=mean(y);
            x_sko=0;
            y_sko=0;
%вычисление СКО и коэф. корреляции модельного и эталонных сигналов
            %for i=1:kt
                x_sko=sum((x(i)-x_sr).*(x(i)-x_sr));
                y_sko=sum((y(i)-y_sr).*(y(i)-y_sr));
                kor(k)=sum((x(i)-x_sr).*(y(i)-y_sr));

              %  kor(k)=kor(k)+abs(x(i)+y(i)); %критерий близости - максимум суммы модулей abs(x(i)+y(i)
            %end             
            kor(k)=kor(k)/(sqrt(x_sko*y_sko));%критерий близости - максимум функции коэффициентов корреляции
            % kor(k)=kor(k)%критерий близости - максимум функции коэффициентов ковариации             
            
  end %конец цикла создания эталонов и вычисления массива коэф. корр.(или )
 
  %СПЛАЙН-ИНТЕРПОЛЯЦИЯ И ПЕРЕДИСКРЕТИЗАЦИЯ
        xx=1:k;
        xi=1:0.1:k;         
        yint=interp1(xx,kor,xi,'spline');% сплайн-аппроксимация коэф корреляции               
        r1=kor;
        %%apr=csaps(xx,r1);
        apr=spaps(xkor,kor,0.000001);%%%%%%%%%%%%%%%

%НАХОЖДЕНИЕ УТОЧНЕННОГО ЗНАЧЕНИЯ КОЛИЧЕСТВА ПЕРИОДОВ СИГНАЛА
        cmax=max(yint); %нахождение максимума коэф. корр.        
        for i=1:round((k-1)/0.1+1)
            if (yint(i)==cmax)     
                kp_int=kp1-kp1*search_area+(i-1)*shagkor/10; %уточненное значение частоты по МАХ функции коэф. корр.
            end           
        end
        kp1=kp_int;%очередное приближение количества периодов
        search_area=search_area/2;%сокращение области поиска
     end  %конец цикла по количеству итераций      
     kp2(i4)=kp_int;
end  %конец цикла стат.испытаний  
  MO1=mean(kp2)
  SKO1=std(kp2)
  SKO_persent=SKO1/kp*100
  hist(kp2,7); %построение итоговой гистограммы
  
  i=1:kt; %отображение модельного сигнала во временной области
% figure
% plot(i,y);
% axis tight;
% title('Time domain')
% xlabel('Sample number')
timeElapsed = toc

pause;
close all;
clear;
